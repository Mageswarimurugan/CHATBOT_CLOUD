import json 
from ibm_watson import AssistantV2 
from ibm_cloud_sdk_core.authenticators import IAMAuthenticator 
 
# Set up your Watson Assistant credentials apikey = "YOUR_API_KEY" url = "YOUR_ASSISTANT_URL" 
assistant_id = "YOUR_ASSISTANT_ID" 
 
# Authenticate with Watson Assistant authenticator = IAMAuthenticator(apikey) 
assistant = AssistantV2(     version='2021-06-14', 
    authenticator=authenticator 
) 
assistant.set_service_url(url) 
 
# Create a session 
response = assistant.create_session(assistant_id=assistant_id) session_id = response.get_result()['session_id'] 
 
# Define a function to send a message to Watson Assistant def send_message(message):     response = assistant.message(         assistant_id=assistant_id,         session_id=session_id,         input={ 
            'message_type': 'text', 
            'text': message 
        } 
    ) 
    return response.get_result() 
 
# Interaction with the chatbot user_input = "Find hotels in Paris" 
response = send_message(user_input) 
 
# Extract and display Watson Assistant's response 
bot_response = response['output']['generic'][0]['text'] print("Chatbot: " + bot_response) 
 
# Remember to end the session when you're done 
assistant.delete_session(assistant_id=assistant_id, session_id=session_id) from flask import Flask, render_template 
 
from watson_developer_cloud import AssistantV2 
 
app = Flask(name) 
 
assistant = AssistantV2(     iam_apikey='YOUR_API_KEY', 
    url='https://{region}.watsonconversation.com/assistant/api' 
) 
 
deployment_id = assistant.deploy_chatbot(     assistant_id='YOUR_ASSISTANT_ID' 
)['deployment_id'] 
 
 
@app.route('/chatbot') def chatbot(): 
    embed_code = assistant.generate_chatbot_embed_code(         deployment_id=deployment_id 
    ) 
    return render_template('chatbot.html', embed_code=embed_code) 
 
 
if name == 'main':     app.run(debug=True)
